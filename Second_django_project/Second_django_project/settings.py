"""
Django settings for Second_django_project project.

Generated by 'django-admin startproject' using Django 2.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# 导入python标准库中的操作系统模块：使用os模块可以操作系统文件，配置文件中会用到
import os

# 默认是当前工程的根目录=找到当前的配置文件的绝对路径，再取它的上两级目录路径（BASE_DIR是根据settings.py所在目录的变化而变化的）
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# 作用：就是用于在工程内部构建、拼接文件路径的。
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# 密钥：很长的一个没有规律的复杂字符串组成
# 作用：Django工程中，如果要用到一些加密处理，那么加密时，默认的密钥就是该配置项
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bjrqeo85zeo4__@smr+)ua$zypg=7-6i1--^-_z&m&(2#tno!y'

# 指定开发阶段的调试模式。DEBUG = True 表示开启调试功能，调试阶段将会精确定位到开发中发生异常位置
# 注意：部署时，要将DEBUG = False，即关闭调试
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# 允许访问该程序的域名：即允许哪个计算机访问Django程序，就添加对应计算机的ip地址和域名
ALLOWED_HOSTS = []


# Application definition

# 用来注册Django的子应用
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 添加方式：'子应用名字'
    'users'     # users是一个用户模块
]

# 中间件
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# 路由的入口
ROOT_URLCONF = 'Second_django_project.urls'

# 配置模板模块的：MVT模式中的T（Templates）
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# wsgi协议的入口
WSGI_APPLICATION = 'Second_django_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# 配置SQL数据库
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

# 如果使用Django开发注册和登录，需要使用的密码和验证方案
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

# # 语言：默认是英文：en-us
# LANGUAGE_CODE = 'en-us'
#
# # 时区：默认是世界时，即格林威治时间，与北京时间（东八区）相差8小时
# TIME_ZONE = 'UTC'

# 简体中文：zh-hans
LANGUAGE_CODE = 'zh-hans'

# 时区：亚洲上海，即北京时间
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
